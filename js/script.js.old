//Guess the number game

//  Allow the player to continually be prompted to enter their guess of what the secret number is until they guess correctly
//  If the player has an incorrect guess, display an alert message that informs the player:
//    Whether their guess is too high, or too low, and...
//    A list of all the previously guessed numbers (without showing the square brackets of an array)
//  If the player has guessed the secret number:
//    Display an alert message that congrats the player and informs them of how many guesses they took
//    End the game play

const game = {
  title: 'Guess the Number!',
  smallestNum: 1,
  biggestNum: 100,
  getBigNum: function() {
    this.biggestNum = parseInt(prompt ('Enter your biggest number: '));
  },
  getSmallNum: function() {
    bigNum = parseInt(prompt ('Enter your smallest number: '));
  },
  secretNum: null,
  prevGuesses: [],
  getGuess: function() {
    let guess = NaN;
    while(isNaN(guess) || guess < this.smallestNum || guess > this.biggestNum){
      guess = parseInt(prompt (`Enter a guess between ${this.smallestNum} and ${this.biggestNum}: `));
    };
    return(guess);      
  },
  play: function() {
    this.getBigNum();
    this.getSmallNum();
    this.secretNum = Math.floor(Math.random() * 
    (this.biggestNum - this.smallestNum + 1)) + this.smallestNum;
    this.getGuess();
    this.render();
    this.prevGuesses.unshift();
      // Rolls random number for the secretNum
  },
    render: function(guess, secretNum) {
    // play will call after a guess has been made that alerts:
    //  If the secret has been guessed, or otherwise:
    if(this.guess === this.secretNum) {
    alert(`Congrats! You guessed the number in ${this.prevGuesses.length} guesses!`);
    }else if(this.guess > this.secretNum) {
      alert(`${this.guess} is too high.`);
      alert(`Previous guesses: ${this.prevGuesses.join(', ')}`);
      game.getGuess();
    }else {
      alert(`Your guess is too low.`);
      alert(`Previous guesses: ${this.prevGuesses.join(', ')}`);
      game.getGuess();
    };
  },
};

game.play();
console.log(game.prevGuesses);



//Getting stuck in an infinite loop when attempting to get the smallest number. and struggling with passing the proper arguments to my render method.  Once I've had some more sleep and time to look over it I feel I should be able to get it working.

// FEEDBACK:
    // You are SUPER close to finishing it up with no problem. To fix your infinite loop you're going to want to take a look at the code for getting the biggest and smallest numbers. You've already defined biggestNum and smallestNum in the game object. Instead of creating new variables in the functions to get the users input try updating the variables you already have since they are in use in your play method.

    // The issue you're having with your render method is that the secretNum or guess isn't being passed in. Ayla provided a code snippet that will help. (see attached)